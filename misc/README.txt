üî¥üü†üü°üü¢üîµüü£
VERSI√ìN: 3
FECHA: 5/5/2025
DESCRIPCI√ìN: Orden de ejecuci√≥n del aplicativo
AUTOR: Federico Vargas Rozo
CREDENCIALES IMPORTANTES:

	Debian GNU/Linux 10 (Buster) (64-bit)
	----------------------------------------
	SSH Host: 127.0.0.1
	SSH Port: 2222
	SSH Username: dev
	SSH Password: 123
	----------------------------------------
	MySQL Host: localhost
	MySQL Port: 3306
	MySQL Username: dev
	MySQL Password: 123
	----------------------------------------
	MongoDB Host: localhost
	MongoDB Port: 27017
	MongoDB Username: n/a (no hay usuario todav√≠a)
	MongoDB Password: n/a (no hay usuario todav√≠a)
	----------------------------------------
üü¢ Los servidores est√°n corriendo por defecto, no es necesario iniciarlos.
üü¢ Al iniciar la m√°quina virtual, se abrir√° la terminal, y mostrar√° el estado de los 3 servidores (el SSH, el MySQL y el MongoDB) los cuales estar√°n escuchando.
üü¢ Por lo tanto, NO SE DEBE HACER NADA EN LA M√ÅQUINA VIRTUAL. Se abre y se deja ah√≠.

üî¥ De aqu√≠ en adelante todo se debe estar haciendo en sus Sistemas Operativos locales (Windows).
üî¥ En este documento todav√≠a no hay nada respecto a MongoDB.

==== INICIAR BACKEND ====
1. Abrir VS Code (o el IDE que est√©n utilizando) y abrir la carpeta "backend" que es una carpeta dentro de la carpeta madre "ProjFinal_BD2".
2. Abrir una terminal ah√≠ en VS Code (CTRL + SHIFT + √ë) y confirmar que el entorno es el correcto:
	> npm ls 
	üîµ Debe salirles la ruta del directorio hasta la carpeta "backend" y todas las dependencias que tiene el backend (dotenv, express, etc.).

3. Para iniciar el servidor backend:
	> npm run dev
	üîµ Debe salirles algo similar a esto:
	
		> backend@1.0.0 dev
		> node index.js

		üü° Iniciando t√∫nel SSH...
		üü¢ Servidor Express escuchando en http://localhost:3001
		üü¢ Conexi√≥n por t√∫nel SSH establecida! (dev@127.0.0.1:2222)
		üü° Iniciando conexi√≥n al servidor MySQL...
		üü¢ Conexi√≥n al servidor MySQL establecida! (dev@localhost:3306)
		‚îå ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ ‚îê
		‚îÇ (index) ‚îÇ Tables_in_nomina    	 ‚îÇ
		‚îú ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ ‚î§
		‚îÇ 0       ‚îÇ 'Asistencia'        	 ‚îÇ
		‚îÇ 1       ‚îÇ 'Cargo'             	 ‚îÇ
		‚îÇ 2       ‚îÇ 'CategoriaConcepto' 	 ‚îÇ
		‚îÇ 3       ‚îÇ 'ConceptoNomina'    	 ‚îÇ
		‚îÇ 4       ‚îÇ 'DetalleNomina'     	 ‚îÇ
		‚îÇ 5       ‚îÇ 'Empleado'          	 ‚îÇ
		‚îÇ 6       ‚îÇ 'Jornada'           	 ‚îÇ
		‚îÇ 7       ‚îÇ 'Nomina'            	 ‚îÇ
		‚îÇ 8       ‚îÇ 'Riesgo'            	 ‚îÇ
		‚îî ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ ‚îò

üü¢ En este punto, ya el backend deber√≠a estar conectado a la BD y toca mantenerlo encendido para que el front funcione.

==== INICIAR FRONTEND ====
1. Abrir otra ventana de VS Code (File > New Window) (Archivo > Nueva Ventana) y abrir la carpeta "vuetify_frontend" que es una carpeta dentro de la carpeta madre "ProjFinal_BD2".
2. Abrir una terminal ah√≠ en VS Code (CTRL + SHIFT + √ë) y confirmar que el entorno es el correcto:
	> npm ls
	üîµ Debe salirles la ruta del directorio hasta la carpeta "vuetify_frontend" y todas las dependencias que tiene el frontend (vite, sass, vue, vuetify, etc.)

3. Para iniciar el servidor frontend:
	> npm run dev
	üîµ Debe salirles algo similar a esto:
		
		> vuetify_frontend@0.0.0 dev
		> vite


  		VITE v5.4.17  ready in 485 ms

  		‚ûú  Local:   http://localhost:3000/
  		‚ûú  Network: use --host to expose
  		‚ûú  press h + enter to show help

4. Para ver la p√°gina, pues abren un navegador y ponen la direcci√≥n que les aparece: http://localhost:3000/

üü¢ En este punto, ya todo el aplicativo deber√≠a estar funcionando.

==== CERRAR BACK Y FRONT ====
En las dos terminales (tanto del back como del front) pueden ingresar: CTRL + C para cerrar los dos servidores.

==== CERRAR M√ÅQUINA VIRTUAL ====
- Pueden cerrar la m√°quina virtual apag√°ndola com√∫n y corriente.
- O pueden cerrar la m√°quina virtual ejecutando:
	> sudo poweroff

üü¢ La VM ya deber√≠a estar apagada y los servidores cerrados.
üü¢ En este punto todo el aplicativo ya deber√≠a estar apagado.


==== CONECTARSE A LA BD MySQL POR MySQL Workbench ====
Les sugiero que las consultas SQL que vayan a hacer las hagan por un programa como este, no por la terminal de MySQL.

Si quieren conectarse a la BD para hacer c√≥digo SQL en Workbench:
1. Abran MySQL Workbench
2. Presionar el "+" para a√±adir una conexi√≥n
3. Denle un nombre. Yo le tengo "BD2_Debian10"
4. En "Connection Method" presionar "Standard TCP/IP over SSH"
5. Ingresar los datos:
	a. SSH Hostname: 127.0.0.1:2222
	b. SSH User: dev
	c. SSH Password > Store in Vault: 123
	d. MySQL Hostname: localhost
	e. MySQL Server Port: 3306
	f. Username: dev
	g. Password > Store in Vault: 123
6. Test Connection para probar la conexi√≥n. (Claramente la m√°quina virtual y la BD deben estar corriendo)
7. Presionar: "Ok" para guardar la conexi√≥n
8. Ya

==== CONECTARSE A LA BD MongoDB por MongoDB Compass ====
MongoDB tambi√©n ofrece una interfaz parecida a Workbench, que se llama MongoDB Compass, y la pueden descargar: https://www.mongodb.com/try/download/compass

Si quieren conectarse a la BD para hacer c√≥digo en Compass:
1. Abran MongoDB Compass
2. Presionar: "Add new connection" para a√±adir una conexi√≥n
3. Denle un nombre. Yo le tengo "BD_Debian10"
4. Ampl√≠en la parte que dice "Advanced Connection Options"
5. Abran la pesta√±a que dice "Proxy/SSH"
6. Presionen la opci√≥n: "SSH with Password"
7. Ingresen los datos:
	a. SSH Hostname: 127.0.0.1
	b. SSH Port: 2222
	c. SSH Username: dev
	d. SSH Password: 123
8. Presionar: "Save & Connect" para guardar la conexi√≥n y conectarse
9. Ya
